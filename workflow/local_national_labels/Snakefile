from pathlib import Path

############################################################################
############################################################################
# Meta info
############################################################################
DATA_ROOT = Path("../../data")
RAW_DATA_ROOT = DATA_ROOT / "raw_data"
INTERMEDIATE_DATA_ROOT = DATA_ROOT / "intermediate_data"
OUTPUT_ROOT = DATA_ROOT / "output"

############################################################################
############################################################################
# Workflow
############################################################################

############################################################################
# Clean individual datasets

HOHENBERG_RAW = RAW_DATA_ROOT / "hohenberg.csv"
HOHENBERG_CLEANED = INTERMEDIATE_DATA_ROOT / "hohenberg_cleand.csv"

rule clean_hohenberg:
    input: HOHENBERG_RAW
    output: HOHENBERG_CLEANED
    shell: "uv run clean_hohenberg.py {input} {output}"


FISHER_RAW = RAW_DATA_ROOT / "fisher.csv"
FISHER_CLEANED = INTERMEDIATE_DATA_ROOT / "fisher_cleand.csv"

rule clean_fisher:
    input: FISHER_RAW
    output: FISHER_CLEANED
    shell: "uv run clean_fisher.py {input} {output}"


YIN_RAW = RAW_DATA_ROOT / "yin.csv"
YIN_CLEANED = INTERMEDIATE_DATA_ROOT / "yin_cleand.csv"

rule clean_yin:
    input: YIN_RAW
    output: YIN_CLEANED
    shell: "python clean_yin.py {input} {output}"


HORNE_RAW = RAW_DATA_ROOT / "horne.csv"
HORNE_CLEANED = INTERMEDIATE_DATA_ROOT / "horne_cleand.csv"

rule clean_horne:
    input: HORNE_RAW
    output: HORNE_CLEANED
    shell: "uv run clean_horne.py {input} {output}"


ABYZ_RAW = RAW_DATA_ROOT / "abyz.csv"
ABYZ_CLEANED = INTERMEDIATE_DATA_ROOT / "abyz_cleand.csv"

rule clean_abyz:
    input: ABYZ_RAW
    output: ABYZ_CLEANED
    shell: "uv run clean_abyz.py {input} {output}"

############################################################################
# Concatenate all the cleaned datasets and clean
CONCAT_CLEANED_DATA = INTERMEDIATE_DATA_ROOT / "concat_cleaned_data.csv"

rule concat_cleaned_data:
    input:
        HOHENBERG_CLEANED,
        FISHER_CLEANED,
        YIN_CLEANED,
        HORNE_CLEANED,
        ABYZ_CLEANED,
    output: CONCAT_CLEANED_DATA
    shell: "uv run concat_dfs.py {input} {output}"
